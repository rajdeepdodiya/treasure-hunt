{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/graphic/Desktop/Web Dev adv Project/treasure-hunt/NotesScreen.js\";\n\nimport React, { useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\n\nvar NotesScreen = function NotesScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var location = route.params.location;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      editVar = _useState2[0],\n      setEditVar = _useState2[1];\n\n  var _useState3 = useState(\"create\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      iconname = _useState4[0],\n      setIconname = _useState4[1];\n\n  var _useState5 = useState('#0000FF'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      iconcolor = _useState6[0],\n      setIconcolor = _useState6[1];\n\n  var user = route.params.user;\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      input = _useState8[0],\n      setInput = _useState8[1];\n\n  React.useLayoutEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return React.createElement(Ionicons, {\n          style: {\n            marginRight: 30\n          },\n          name: iconname,\n          size: 40,\n          color: iconcolor,\n          onPress: function onPress() {\n            editPressed();\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }\n        });\n      }\n    });\n  }, [navigation, {}]);\n\n  var editPressed = function editPressed() {\n    if (iconname === \"create\") {\n      setIconname(\"checkmark\");\n      setIconcolor('#00A300');\n      setEditVar(true);\n    } else {\n      setIconname(\"create\");\n      setIconcolor('#0000FF');\n      setEditVar(false);\n      saveNotesToDatabase();\n    }\n  };\n\n  var saveNotesToDatabase = function saveNotesToDatabase() {\n    console.log(\"save notes to db\");\n    console.log(location);\n  };\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    editable: editVar,\n    multiline: true,\n    numberOfLines: 10,\n    value: input,\n    onChangeText: setInput,\n    style: {\n      height: '90%',\n      borderColor: 'gray',\n      borderWidth: 1,\n      margin: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }));\n};\n\nexport default NotesScreen;","map":{"version":3,"sources":["/Users/graphic/Desktop/Web Dev adv Project/treasure-hunt/NotesScreen.js"],"names":["React","useState","Ionicons","NotesScreen","navigation","route","location","params","editVar","setEditVar","iconname","setIconname","iconcolor","setIconcolor","user","input","setInput","useLayoutEffect","setOptions","headerRight","marginRight","editPressed","saveNotesToDatabase","console","log","height","borderColor","borderWidth","margin"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;;;;;AAEA,OAAOC,QAAP;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAwB;AAAA,MAAtBC,UAAsB,QAAtBA,UAAsB;AAAA,MAAXC,KAAW,QAAXA,KAAW;AAExC,MAAMC,QAAQ,GAACD,KAAK,CAACE,MAAN,CAAaD,QAA5B;;AACA,kBAA6BL,QAAQ,CAAC,KAAD,CAArC;AAAA;AAAA,MAAOO,OAAP;AAAA,MAAeC,UAAf;;AACA,mBAA+BR,QAAQ,CAAC,QAAD,CAAvC;AAAA;AAAA,MAAOS,QAAP;AAAA,MAAgBC,WAAhB;;AACA,mBAAiCV,QAAQ,CAAC,SAAD,CAAzC;AAAA;AAAA,MAAOW,SAAP;AAAA,MAAiBC,YAAjB;;AACF,MAAMC,IAAI,GAACT,KAAK,CAACE,MAAN,CAAaO,IAAxB;;AAEA,mBAAyBb,QAAQ,CAAC,EAAD,CAAjC;AAAA;AAAA,MAAOc,KAAP;AAAA,MAAaC,QAAb;;AAEEhB,EAAAA,KAAK,CAACiB,eAAN,CAAsB,YAAM;AACxBb,IAAAA,UAAU,CAACc,UAAX,CAAsB;AACpBC,MAAAA,WAAW,EAAG;AAAA,eACZ,oBAAC,QAAD;AACA,UAAA,KAAK,EAAE;AAACC,YAAAA,WAAW,EAAC;AAAb,WADP;AAEE,UAAA,IAAI,EAAEV,QAFR;AAGE,UAAA,IAAI,EAAE,EAHR;AAIE,UAAA,KAAK,EAAEE,SAJT;AAKE,UAAA,OAAO,EAAE,mBAAM;AAACS,YAAAA,WAAW;AAAI,WALjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADY;AAAA;AADM,KAAtB;AAWD,GAZH,EAYK,CAACjB,UAAD,EAAY,EAAZ,CAZL;;AAcA,MAAMiB,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,QAAGX,QAAQ,KAAK,QAAhB,EAAyB;AACrBC,MAAAA,WAAW,CAAC,WAAD,CAAX;AACAE,MAAAA,YAAY,CAAC,SAAD,CAAZ;AACAJ,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH,KAJD,MAIK;AACDE,MAAAA,WAAW,CAAC,QAAD,CAAX;AACAE,MAAAA,YAAY,CAAC,SAAD,CAAZ;AACAJ,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAa,MAAAA,mBAAmB;AACtB;AAEJ,GAZD;;AAcA,MAAMA,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYlB,QAAZ;AACH,GAHD;;AAKJ,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,SAAD;AACA,IAAA,QAAQ,EAAEE,OADV;AAEA,IAAA,SAAS,MAFT;AAGA,IAAA,aAAa,EAAE,EAHf;AAIA,IAAA,KAAK,EAAEO,KAJP;AAKA,IAAA,YAAY,EAAEC,QALd;AAMF,IAAA,KAAK,EAAE;AAAES,MAAAA,MAAM,EAAE,KAAV;AAAiBC,MAAAA,WAAW,EAAE,MAA9B;AAAsCC,MAAAA,WAAW,EAAE,CAAnD;AAAuDC,MAAAA,MAAM,EAAC;AAA9D,KANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AAgBC,CA3DD;;AA6DA,eAAezB,WAAf","sourcesContent":["import React , {useState} from 'react';\nimport { Text,Button,TextInput,View } from 'react-native';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\nconst NotesScreen = ({navigation,route}) => {\n\n    const location=route.params.location;\n    const [editVar,setEditVar] = useState(false);\n    const [iconname,setIconname] = useState(\"create\");\n    const [iconcolor,setIconcolor] = useState('#0000FF');\n  const user=route.params.user;\n\n  const [input,setInput] = useState(\"\");\n\n    React.useLayoutEffect(() => {\n        navigation.setOptions({\n          headerRight : () => ( \n            <Ionicons\n            style={{marginRight:30}}\n              name={iconname}\n              size={40}\n              color={iconcolor}\n              onPress={() => {editPressed();}}\n            />\n      )\n        })\n      }, [navigation,{}]);\n    \n    const editPressed = () => {\n        if(iconname === \"create\"){\n            setIconname(\"checkmark\");\n            setIconcolor('#00A300');\n            setEditVar(true);\n        }else{\n            setIconname(\"create\");\n            setIconcolor('#0000FF');\n            setEditVar(false);\n            saveNotesToDatabase();\n        }\n  \n    }\n\n    const saveNotesToDatabase = () => {\n        console.log(\"save notes to db\");\n        console.log(location);\n    }\n\nreturn(\n    <View>\n        \n\n       \n\n        <TextInput\n        editable={editVar}\n        multiline\n        numberOfLines={10}\n        value={input}\n        onChangeText={setInput}\n      style={{ height: '90%', borderColor: 'gray', borderWidth: 1 , margin:15}}\n    />\n    </View>\n);\n}\n\nexport default NotesScreen;"]},"metadata":{},"sourceType":"module"}