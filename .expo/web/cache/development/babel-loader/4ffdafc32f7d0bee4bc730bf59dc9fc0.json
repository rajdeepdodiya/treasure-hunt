{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/graphic/Desktop/Web Dev adv Project/treasure-hunt/CacheDetailsScreen.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { db } from \"./FirebaseManager\";\nimport * as location from 'expo-location';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport MapView, { Marker } from 'react-native-maps';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\n\nvar CacheDetailsScreen = function CacheDetailsScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var locationInfo = route.params.locationInfo;\n  var user = route.params.user;\n  var userObj = {};\n  var userFavArray = [];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isEnabled = _useState2[0],\n      setEnabled = _useState2[1];\n\n  var radioDataForTrackingStatus = [{\n    label: 'started',\n    accessibilityLabel: 'started'\n  }, {\n    label: 'in-progress',\n    accessibilityLabel: 'in-progress'\n  }, {\n    label: 'completed',\n    accessibilityLabel: 'Completed'\n  }];\n\n  var _React$useState = React.useState({\n    latitude: locationInfo.location.latitude,\n    longitude: locationInfo.location.longitude,\n    latitudeDelta: 0.005,\n    longitudeDelta: 0.005\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      currRegion = _React$useState2[0],\n      setCurrRegion = _React$useState2[1];\n\n  useEffect(function () {\n    console.log(\"user from route useeffect\" + user);\n    AsyncStorage.getItem(\"username\").then(function (data) {\n      user = data;\n      console.log(\"async useeffect\" + user);\n      db.collection(\"users\").where(\"username\", \"==\", user).get().then(function (querySnapShot) {\n        if (querySnapShot.size === 0) {\n          console.log(\"useeffect\");\n          console.log(\"couldnt find user\");\n        } else {\n          querySnapShot.forEach(function (doc) {\n            userObj = doc;\n          });\n\n          if (\"favourites\" in userObj.data()) {\n            userFavArray = userObj.data().favourites;\n\n            if (userObj.data().favourites.includes(locationInfo.id)) {\n              setEnabled(true);\n            } else {\n              setEnabled(false);\n            }\n          }\n        }\n      }).catch();\n    }).catch();\n  }, []);\n\n  var showFavourites = function showFavourites() {\n    console.log(\"reached\");\n    navigation.navigate(\"Favourites\", {\n      user: user,\n      location: locationInfo.id\n    });\n  };\n\n  var addOrDelete = function addOrDelete(value) {\n    setEnabled(value);\n    console.log(\" add or delete user\" + user);\n\n    if (value === true) {\n      addToFavourites();\n    } else {\n      deleteFromFavourites();\n    }\n  };\n\n  var deleteFromFavourites = function deleteFromFavourites() {\n    db.collection(\"users\").where(\"username\", \"==\", user).get().then(function (querySnapShot) {\n      console.log(\"user\" + user);\n\n      if (querySnapShot.size === 0) {\n        console.log(\"couldnt find user\");\n      } else {\n        querySnapShot.forEach(function (doc) {\n          userObj = doc;\n        });\n\n        if (\"favourites\" in userObj.data()) {\n          userFavArray = userObj.data().favourites;\n\n          if (userObj.data().favourites.includes(locationInfo.id)) {\n            var index = userObj.data().favourites.indexOf(locationInfo.id);\n\n            if (index > -1) {\n              userFavArray.splice(index, 1);\n            }\n          } else {\n            console.log(\"doesnt exist to delete\");\n          }\n        }\n\n        db.collection(\"users\").doc(userObj.id).update({\n          favourites: userFavArray\n        }).then(function () {\n          console.log(\"successfully finished update process = delete\");\n        }).catch(function (err) {\n          console.log(\"error while updating delete\");\n          console.log(err);\n        });\n      }\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  var addToFavourites = function addToFavourites() {\n    db.collection(\"users\").where(\"username\", \"==\", user).get().then(function (querySnapShot) {\n      if (querySnapShot.size === 0) {\n        console.log(\"couldnt find user\");\n      } else {\n        querySnapShot.forEach(function (doc) {\n          userObj = doc;\n        });\n\n        if (\"favourites\" in userObj.data()) {\n          userFavArray = userObj.data().favourites;\n\n          if (!userObj.data().favourites.includes(locationInfo.id)) {\n            userFavArray.push(locationInfo.id);\n          } else {\n            console.log(\"already added to favourites\");\n          }\n        } else {\n          userFavArray.push(locationInfo.id);\n        }\n\n        db.collection(\"users\").doc(userObj.id).update({\n          favourites: userFavArray\n        }).then(function () {\n          console.log(\"successfully finished update process\");\n        }).catch(function (err) {\n          console.log(\"error while updating\");\n          console.log(err);\n        });\n      }\n    }).catch(function (err) {\n      console.log(\"error in adding to favourites\");\n      console.log(err);\n    });\n  };\n\n  var mapMoved = function mapMoved(data) {};\n\n  var addOrViewNotes = function addOrViewNotes() {\n    console.log(\"user from to notes\" + user);\n    navigation.navigate(\"notes\", {\n      user: user\n    });\n  };\n\n  React.useLayoutEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return React.createElement(Ionicons, {\n          style: {\n            marginRight: 30\n          },\n          name: \"heart\",\n          size: 30,\n          color: \"#FF0000\",\n          onPress: showFavourites,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 11\n          }\n        });\n      }\n    });\n  }, [navigation, {}]);\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }\n  }, React.createElement(MapView, {\n    style: {\n      width: Dimensions.get(\"window\").width,\n      height: Dimensions.get(\"window\").height / 3\n    },\n    initialRegion: currRegion,\n    onRegionChangeComplete: mapMoved,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 14\n    }\n  }, React.createElement(Marker, {\n    coordinate: {\n      latitude: currRegion.latitude,\n      longitude: currRegion.longitude\n    },\n    title: locationInfo.title,\n    description: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      marginStart: '45%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }, \"Add to favourites\"), React.createElement(Switch, {\n    style: {\n      marginStart: 20\n    },\n    trackColor: {\n      false: \"#767577\",\n      true: \"#81b0ff\"\n    },\n    thumbColor: isEnabled ? \"#f5dd4b\" : \"#f4f3f4\",\n    ios_backgroundColor: \"#3e3e3e\",\n    onValueChange: addOrDelete,\n    value: isEnabled,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  })), React.createElement(Button, {\n    onPress: addOrViewNotes,\n    title: \"notes\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 1\n    }\n  }));\n};\n\nexport default CacheDetailsScreen;","map":{"version":3,"sources":["/Users/graphic/Desktop/Web Dev adv Project/treasure-hunt/CacheDetailsScreen.js"],"names":["React","useEffect","useState","db","location","AsyncStorage","MapView","Marker","Ionicons","CacheDetailsScreen","navigation","route","locationInfo","params","user","userObj","userFavArray","isEnabled","setEnabled","radioDataForTrackingStatus","label","accessibilityLabel","latitude","longitude","latitudeDelta","longitudeDelta","currRegion","setCurrRegion","console","log","getItem","then","data","collection","where","get","querySnapShot","size","forEach","doc","favourites","includes","id","catch","showFavourites","navigate","addOrDelete","value","addToFavourites","deleteFromFavourites","index","indexOf","splice","update","err","push","mapMoved","addOrViewNotes","useLayoutEffect","setOptions","headerRight","marginRight","width","Dimensions","height","title","flexDirection","marginStart","false","true"],"mappings":"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","sourcesContent":["import React ,{useEffect,useState} from 'react';\nimport { View, Text, Dimensions, Button, Switch, Alert,TextInput} from 'react-native';\nimport { db } from './FirebaseManager';\nimport * as location from 'expo-location';\nimport { StyleSheet } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport  MapView, {Marker} from 'react-native-maps';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\n//import RadioButtonRN from 'radio-buttons-react-native';\n\nconst CacheDetailsScreen = ({navigation,route}) => {\n   \n    const locationInfo = route.params.locationInfo;\n   let user=route.params.user;\n   \n    \n    let userObj={};\n    let userFavArray=[];\n    \n    const [isEnabled,setEnabled]=useState(false);\n    const radioDataForTrackingStatus = [\n      {\n        label: 'started',\n        accessibilityLabel: 'started'\n       },\n       {\n        label: 'in-progress',\n        accessibilityLabel: 'in-progress'\n       },\n       {\n        label: 'completed',\n        accessibilityLabel: 'Completed'\n       }\n      ];\n    const [currRegion,setCurrRegion]=React.useState({\n      //latitude:43.656290660189946,\n      latitude:locationInfo.location.latitude,\n      longitude:locationInfo.location.longitude,\n      latitudeDelta:0.005,\n      longitudeDelta:0.005 \n    });\n\n    useEffect(() => {   \n      console.log(\"user from route useeffect\"+user);\n     AsyncStorage.getItem(\"username\").then((data) => {user=data;console.log(\"async useeffect\"+user);\n      \n        db.collection(\"users\").where(\"username\",\"==\",user).get()\n        .then((querySnapShot) => {\n          if(querySnapShot.size === 0 ){\n            console.log(\"useeffect\");\n            console.log(\"couldnt find user\");\n          }else{\n            querySnapShot.forEach((doc) => {\n              userObj=doc;\n            });//forEach\n  \n            if(\"favourites\" in userObj.data()){\n              userFavArray=userObj.data().favourites;\n               if(userObj.data().favourites.includes(locationInfo.id)){\n                  setEnabled(true);\n               }else{\n                  setEnabled(false);\n               }\n              }\n  \n          }//else\n        })\n        .catch();\n\n\n      \n     }).catch();\n      \n      \n    },[]);\n\n    const showFavourites = () =>{\n      console.log(\"reached\");\n        navigation.navigate(\"Favourites\",{user:user,location:locationInfo.id});\n    }\n\n    const addOrDelete = (value) =>{\n      setEnabled(value);\n      console.log(\" add or delete user\"+user);\n      if(value === true){\n          addToFavourites();\n      }else{\n          deleteFromFavourites();\n      }\n    }\n\n    const deleteFromFavourites = () => {\n      db.collection(\"users\").where(\"username\",\"==\",user).get()\n      .then((querySnapShot) => {\n        console.log(\"user\" + user);\n        if(querySnapShot.size === 0 ){\n          console.log(\"couldnt find user\");\n        }else{\n          querySnapShot.forEach((doc) => {\n            userObj=doc;\n          });//forEach\n\n\n          if(\"favourites\" in userObj.data()){\n            userFavArray=userObj.data().favourites;\n             if(userObj.data().favourites.includes(locationInfo.id)){\n              const index = userObj.data().favourites.indexOf(locationInfo.id);\n              if (index > -1) {\n                  userFavArray.splice(index, 1);\n              }\n              }else{\n                console.log(\"doesnt exist to delete\");\n              }\n          }\n\n\n          //update db\n          db.collection(\"users\").doc(userObj.id).update({\n            favourites:userFavArray\n       })\n       .then(() => {console.log(\"successfully finished update process = delete\");})\n       .catch((err)=>{\n         console.log(\"error while updating delete\");\n         console.log(err);\n       });\n\n\n\n        }//else\n      })\n      .catch((err) => {console.log(err);});\n    }\n    const addToFavourites = () => {\n       db.collection(\"users\").where(\"username\",\"==\",user).get()\n        .then((querySnapShot) => {\n          if(querySnapShot.size === 0 ){\n            console.log(\"couldnt find user\");\n          }else{\n            querySnapShot.forEach((doc) => {\n              userObj=doc;\n            });//forEach\n            \n            if(\"favourites\" in userObj.data()){\n              userFavArray=userObj.data().favourites;\n               if(!userObj.data().favourites.includes(locationInfo.id)){\n                  userFavArray.push(locationInfo.id);\n                }else{\n                  console.log(\"already added to favourites\");\n                }\n            }else{\n              userFavArray.push(locationInfo.id);\n            }\n            \n           \n            //update db\n           db.collection(\"users\").doc(userObj.id).update({\n                favourites:userFavArray\n           })\n           .then(() => {\n             console.log(\"successfully finished update process\");\n            //  Alert.alert();\n          })\n           .catch((err)=>{\n             console.log(\"error while updating\");\n             console.log(err);\n           });\n          }//else\n            \n        })//then\n        .catch((err) => {console.log(\"error in adding to favourites\");console.log(err);});\n    }\n\n    const mapMoved = (data) => {\n      // setCurrRegion(data)\n     }\n\n     const addOrViewNotes=()=>{\n       console.log(\"user from to notes\"+user);\n       navigation.navigate(\"notes\",{user:user});\n     }\n\n    React.useLayoutEffect(() => {\n      navigation.setOptions({\n        headerRight : () => ( \n          <Ionicons\n          style={{marginRight:30}}\n            name=\"heart\"\n            size={30}\n            color=\"#FF0000\"\n            onPress={showFavourites}\n          />\n    )\n      })\n    }, [navigation,{}]);\n\n\n   \n   \n\n    return (\n        <View>\n             <MapView \n                style={{width:Dimensions.get(\"window\").width, height:Dimensions.get(\"window\").height/3}}\n                initialRegion={currRegion}\n                onRegionChangeComplete={mapMoved} >\n      \n                <Marker coordinate={{latitude:currRegion.latitude,\n                longitude:currRegion.longitude}} title={locationInfo.title} description=\"\"></Marker>\n\n            </MapView>\n            <View style={{flexDirection:'row'}}>\n            <Text style={{marginStart:'45%'}}>Add to favourites</Text>\n            <Switch \n              style={{marginStart:20}}\n               trackColor={{ false: \"#767577\", true: \"#81b0ff\" }}\n               thumbColor={isEnabled ? \"#f5dd4b\" : \"#f4f3f4\"}\n               ios_backgroundColor=\"#3e3e3e\"\n               onValueChange={addOrDelete}\n               value={isEnabled}/>\n            </View>\n            {/* <TextInput\n            style={{borderRadius:10},{borderColor:'#0000FF'},{backgroundColor:'#FF0000'},{borderWidth:10}}\n            \n            /> */}\n\n<Button\n  onPress={addOrViewNotes}\n  title=\"notes\"\n/>\n              \n            \n\n            {/* <RadioButtonRN\n              data={radioDataForTrackingStatus}\n              selectedBtn={(e) => {}}\n              onValueChange={(val)=>{console.log(val);}}\n            /> */}\n            \n        </View>\n    );\n}\n\nexport default CacheDetailsScreen;"]},"metadata":{},"sourceType":"module"}