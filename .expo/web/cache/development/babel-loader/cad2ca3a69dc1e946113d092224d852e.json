{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/graphic/Desktop/Web Dev adv Project/treasure-hunt/ListScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { db } from \"./FirebaseManager\";\nimport { getDistance } from 'geolib';\nimport * as location from 'expo-location';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nfunction ListScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      cachesArray = _useState2[0],\n      setCachesArray = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      msg = _useState6[0],\n      setMsg = _useState6[1];\n\n  var LocationCoords = [];\n  var nearestLocations = [];\n  var user = \"\";\n  useEffect(function () {\n    AsyncStorage.getItem(\"username\").then(function (data) {\n      console.log(data);\n      user = data;\n    }).catch(function (err) {\n      console.log(err);\n    });\n    setCachesArray([]);\n    getCurrentLocation();\n  }, []);\n\n  var getCurrentLocation = function getCurrentLocation() {\n    console.log(user);\n    location.requestForegroundPermissionsAsync().then(function (result) {\n      console.log(\"got reslut from \");\n      console.log(result);\n\n      if (result.status === \"granted\") {\n        console.log(\"user gave permission\");\n        return location.getCurrentPositionAsync({});\n      } else {\n        console.log(\"permission denied\");\n        throw new Error(\"user didnt grant permission\");\n      }\n    }).then(function (loc) {\n      console.log(\"got the location\");\n      console.log(loc);\n      var coordinates = {\n        lat: loc.coords.latitude,\n        lng: loc.coords.longitude\n      };\n      showCaches(coordinates);\n    }).catch(function (err) {\n      console.log(err);\n      console.log(\"Couldnt fetch location\");\n    });\n  };\n\n  var showCaches = function showCaches(coordinates) {\n    console.log(\"user\");\n    console.log(user);\n    db.collection(\"caches\").where(\"postedBy\", \"!=\", user).get().then(function (querySnapshot) {\n      if (querySnapshot.size === 0) {\n        setMsg(\"You do not have any caches to find yet\");\n      } else {\n        setMsg(\"\");\n        LocationCoords = [];\n        nearestLocations = [];\n        querySnapshot.forEach(function (doc) {\n          LocationCoords.push({\n            latitude: parseFloat(doc.data().latitude),\n            longitude: parseFloat(doc.data().longitude),\n            title: doc.data().cacheName,\n            id: doc.id\n          });\n        });\n\n        for (var i = 0; i < LocationCoords.length; i++) {\n          var dist = getDistance({\n            latitude: coordinates.lat,\n            longitude: coordinates.lng\n          }, {\n            latitude: LocationCoords[i].latitude,\n            longitude: LocationCoords[i].longitude\n          }) * 0.000621371;\n\n          if (!isNaN(dist)) {\n            var locationInfo = {\n              location: {\n                latitude: LocationCoords[i].latitude,\n                longitude: LocationCoords[i].longitude\n              },\n              distance: dist.toFixed(3),\n              title: LocationCoords[i].title,\n              id: LocationCoords[i].id\n            };\n            nearestLocations.push(locationInfo);\n          }\n\n          nearestLocations.sort(function (a, b) {\n            return a.distance - b.distance;\n          });\n        }\n\n        setCachesArray(nearestLocations);\n        setLoading(false);\n      }\n    });\n  };\n\n  var goToDetailsScreen = function goToDetailsScreen(item) {\n    navigation.navigate(\"CacheDetails\", {\n      locationInfo: item\n    }, {\n      username: user\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: ({\n      backgroundColor: '#dfdfdf'\n    }, {\n      margin: 10\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.page_title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, \"Caches Available\"), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, isLoading ? React.createElement(ActivityIndicator, {\n    animating: true,\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 33\n    }\n  }) : React.createElement(FlatList, {\n    data: cachesArray,\n    keyExtractor: function keyExtractor(item, index) {\n      return item.id;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item,\n          index = _ref2.index;\n      return React.createElement(Pressable, {\n        onPress: function onPress() {\n          return goToDetailsScreen(item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 49\n        }\n      }, React.createElement(View, {\n        style: styles.list_item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.flex,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 20\n        }\n      }, React.createElement(Text, {\n        style: styles.cache_title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 20\n        }\n      }, item.title), React.createElement(Text, {\n        style: styles.cache_title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }\n      }, item.distance, \" Kms\")), React.createElement(Text, {\n        style: styles.latnlong,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }\n      }, item.location.latitude.toFixed(3)), React.createElement(Text, {\n        style: styles.latnlong,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }\n      }, item.location.longitude.toFixed(3)), React.createElement(View, {\n        style: styles.seperator,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }\n      })));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  })), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 13\n    }\n  }, msg));\n}\n\nvar styles = StyleSheet.create({\n  list_item: {\n    backgroundColor: '#009A00',\n    borderRadius: 15,\n    marginBottom: 10\n  },\n  seperator: {\n    height: 5,\n    backgroundColor: 'white'\n  },\n  cache_title: {\n    color: 'white',\n    fontSize: 25,\n    fontWeight: 'bold',\n    paddingBottom: 10,\n    paddingStart: 15\n  },\n  flex: {\n    flexDirection: 'row'\n  },\n  page_title: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 30,\n    color: '#009200',\n    margin: 10\n  },\n  latnlong: {\n    fontSize: 15,\n    color: 'yellow',\n    paddingStart: 10\n  }\n});\nexport default ListScreen;","map":{"version":3,"sources":["/Users/graphic/Desktop/Web Dev adv Project/treasure-hunt/ListScreen.js"],"names":["React","useEffect","useState","db","getDistance","location","AsyncStorage","ListScreen","navigation","route","cachesArray","setCachesArray","isLoading","setLoading","msg","setMsg","LocationCoords","nearestLocations","user","getItem","then","data","console","log","catch","err","getCurrentLocation","requestForegroundPermissionsAsync","result","status","getCurrentPositionAsync","Error","loc","coordinates","lat","coords","latitude","lng","longitude","showCaches","collection","where","get","querySnapshot","size","forEach","doc","push","parseFloat","title","cacheName","id","i","length","dist","isNaN","locationInfo","distance","toFixed","sort","a","b","goToDetailsScreen","item","navigate","username","backgroundColor","margin","styles","page_title","index","list_item","flex","cache_title","latnlong","seperator","StyleSheet","create","borderRadius","marginBottom","height","color","fontSize","fontWeight","paddingBottom","paddingStart","flexDirection","textAlign"],"mappings":"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","sourcesContent":["import React ,{useEffect,useState} from 'react';\nimport { View, Text ,ActivityIndicator,FlatList, SafeAreaView, Pressable} from 'react-native';\nimport { db } from './FirebaseManager';\nimport {getDistance} from 'geolib';\nimport * as location from 'expo-location';\n//import Styles from './Styles';\nimport { StyleSheet } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nfunction ListScreen({navigation, route}){\n    const [cachesArray,setCachesArray]=useState([]);\n    const [isLoading,setLoading]=useState(true);\n    const [msg,setMsg]=useState(\"\");\n\n    let LocationCoords = [];\n    let nearestLocations=[];\n    // const user=route.params.user;\n   let user=\"\";\n\n    useEffect(() => {\n      AsyncStorage.getItem(\"username\")\n      .then((data) => {console.log(data);user=data})\n      .catch((err)=>{console.log(err)});\n      \n      setCachesArray([]);\n        //43.789634649203784, -79.24426781584285 - 8 mass\n        //43.656290660189946, -79.38017140235499 - young/dund\n       getCurrentLocation();\n        \n    },[]);\n\n    const getCurrentLocation= () =>{\n      console.log(user);\n\n        location.requestForegroundPermissionsAsync()\n          .then(\n            (result) => {\n              console.log(\"got reslut from \");\n              console.log(result);\n      \n              if(result.status === \"granted\"){\n                console.log(\"user gave permission\");\n      \n                return location.getCurrentPositionAsync({});\n              }else{\n                console.log(\"permission denied\");\n                throw new Error(\"user didnt grant permission\");\n              }\n            }\n          )\n          .then(\n            (loc) => {\n      console.log(\"got the location\");\n      console.log(loc);\n     \n      \n      const coordinates={\n        lat:loc.coords.latitude,\n        lng:loc.coords.longitude\n      }\n      showCaches(coordinates);\n     \n            }\n          )\n          .catch(\n            (err) =>{\n              console.log(err);\n              console.log(\"Couldnt fetch location\");\n            }\n          );\n        \n       \n      }\n\n    const showCaches = (coordinates) => {\n        console.log(\"user\");\n        console.log(user);\n        db.collection(\"caches\").where(\"postedBy\",\"!=\",user).get().then((querySnapshot) => {\n            if(querySnapshot.size === 0){\n                setMsg(\"You do not have any caches to find yet\");\n            }else{\n                \n                setMsg(\"\");\n                 LocationCoords=[];\n                 nearestLocations=[];\n\n                querySnapshot.forEach((doc) => {\n                 \n                  LocationCoords.push({latitude:parseFloat(doc.data().latitude), longitude:parseFloat(doc.data().longitude),title:doc.data().cacheName,id:doc.id});\n                });\n                \n                for(let i=0;i<LocationCoords.length;i++){\n                   // const dist=getDistance({latitude:43.656290660189946,longitude:-79.38017140235499},{latitude:LocationCoords[i].latitude,longitude:LocationCoords[i].longitude}) * 0.000621371;\n                 const dist=getDistance({latitude:coordinates.lat,longitude:coordinates.lng},{latitude:LocationCoords[i].latitude,longitude:LocationCoords[i].longitude}) * 0.000621371;\n                    if(!isNaN(dist)){\n                            const locationInfo = {\n                                location:{\n                                    latitude:LocationCoords[i].latitude,\n                                    longitude:LocationCoords[i].longitude\n                                },\n                               distance:dist.toFixed(3),\n                               title:LocationCoords[i].title,\n                               id:LocationCoords[i].id\n                            }\n                            nearestLocations.push(locationInfo);\n                        \n                    }   \n                    nearestLocations.sort(function (a, b) {\n                        return a.distance - b.distance;\n                      }); \n                }\n                setCachesArray(nearestLocations);\n                 setLoading(false);\n                \n               }\n            }\n          );      \n    }\n    \n\n    const goToDetailsScreen = (item) => {\n      navigation.navigate(\"CacheDetails\",{locationInfo:item},{username:user});\n    }\n    return(\n        <SafeAreaView style={{backgroundColor:'#dfdfdf'},{margin:10}}> \n            <Text style={styles.page_title}>Caches Available</Text>\n         \n            <View>\n                  {isLoading ? (<ActivityIndicator animating={true} size=\"large\"/>) : (\n                <FlatList\n                data={cachesArray}\n                keyExtractor = {(item,index) => {return item.id}}\n                renderItem={({item,index}) => ( <Pressable  onPress={() => goToDetailsScreen(item)}  >\n                <View style={styles.list_item}>\n                   <View style={styles.flex}>\n                   <Text  style={styles.cache_title}>{item.title}</Text>\n                    <Text  style={styles.cache_title}>{item.distance} Kms</Text>\n                   </View>\n                    \n                    <Text style={styles.latnlong}>{item.location.latitude.toFixed(3)}</Text>\n                    <Text style={styles.latnlong}>{item.location.longitude.toFixed(3)}</Text>  \n                    \n                    <View style={styles.seperator}/> \n                </View>\n               \n                </Pressable>\n                )}\n\n                />\n            )}\n            </View>\n                \n            <Text>{msg}</Text>\n        </SafeAreaView>\n    );\n}\n\nconst styles=StyleSheet.create({\n    list_item:{\n        backgroundColor:'#009A00',\n        borderRadius:15,\n        marginBottom:10\n    },\n    seperator:{\n      height:5,\n      backgroundColor:'white'\n  },\n  cache_title:{\n    color:'white',\n    fontSize:25,\n    fontWeight:'bold',\n    paddingBottom:10,\n    paddingStart:15\n   \n  },\n  flex:{\n    flexDirection:'row'\n  },\n  page_title:{\n    textAlign:'center',\n    fontWeight:'bold',\n    fontSize:30,\n    color:'#009200',\n    margin:10\n  },\n  latnlong:{\n    fontSize:15,\n    color:'yellow',\n    paddingStart:10\n  }\n});\nexport default ListScreen;"]},"metadata":{},"sourceType":"module"}