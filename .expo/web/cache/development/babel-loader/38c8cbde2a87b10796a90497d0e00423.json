{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/anonymousfiles/Desktop/Advanced Web Development/Project/Treasure-Hunt/MapScreen.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport MapView, { Marker } from 'react-native-maps';\nimport * as Location from 'expo-location';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\n\nfunction MapScreen() {\n  var mapRef = useRef(null);\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentCoordinates = _useState2[0],\n      setCurrentCoordinates = _useState2[1];\n\n  var _useState3 = useState({\n    latitude: 45.5163539,\n    longitude: -73.5775142,\n    latitudeDelta: 0.05,\n    longitudeDelta: 0.05\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currRegion = _useState4[0],\n      setCurrRegion = _useState4[1];\n\n  useEffect(function () {\n    getCurrentLocation();\n  }, []);\n\n  var getCurrentLocation = function getCurrentLocation() {\n    Location.requestForegroundPermissionsAsync().then(function (result) {\n      if (result.status === \"granted\") {\n        return Location.getCurrentPositionAsync({});\n      } else {\n        alert(\"You have not granted location permission. Please grant location permission from Settings.\");\n      }\n    }).then(function (location) {\n      console.log(\"Location received: \");\n      console.log(location);\n      var coordinates = {\n        lat: location.coords.latitude,\n        lng: location.coords.longitude\n      };\n      console.log(coordinates);\n      mapRef.current.animateCamera({\n        center: coordinates\n      }, 2000);\n      setCurrentCoordinates(coordinates);\n      setCurrRegion(coordinates);\n    }).catch(function (error) {\n      console.log(\"Error while granting permission or while accessing current location: \" + error);\n    });\n  };\n\n  var mapMoved = function mapMoved(data) {\n    console.log(data);\n    setCurrRegion(data);\n  };\n\n  return React.createElement(SafeAreaView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, React.createElement(MapView, {\n    style: {\n      width: Dimensions.get(\"window\").width,\n      height: Dimensions.get(\"window\").height\n    },\n    ref: mapRef,\n    initialRegion: currRegion,\n    onRegionChangeComplete: mapMoved,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"Current\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 6\n    }\n  }));\n}\n\nexport default MapScreen;","map":{"version":3,"sources":["/Users/anonymousfiles/Desktop/Advanced Web Development/Project/Treasure-Hunt/MapScreen.js"],"names":["React","useEffect","useRef","useState","MapView","Marker","Location","MapScreen","mapRef","currentCoordinates","setCurrentCoordinates","latitude","longitude","latitudeDelta","longitudeDelta","currRegion","setCurrRegion","getCurrentLocation","requestForegroundPermissionsAsync","then","result","status","getCurrentPositionAsync","alert","location","console","log","coordinates","lat","coords","lng","current","animateCamera","center","catch","error","mapMoved","data","width","Dimensions","get","height"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;;;;AAEA,OAAOC,OAAP,IAAiBC,MAAjB,QAA8B,mBAA9B;AACA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;;;AAGA,SAASC,SAAT,GAAoB;AAEhB,MAAMC,MAAM,GAAGN,MAAM,CAAC,IAAD,CAArB;;AACA,kBAAoDC,QAAQ,CAAC,EAAD,CAA5D;AAAA;AAAA,MAAOM,kBAAP;AAAA,MAA2BC,qBAA3B;;AACA,mBAAoCP,QAAQ,CAAC;AACzCQ,IAAAA,QAAQ,EAAE,UAD+B;AAEzCC,IAAAA,SAAS,EAAE,CAAC,UAF6B;AAGzCC,IAAAA,aAAa,EAAE,IAH0B;AAIzCC,IAAAA,cAAc,EAAC;AAJ0B,GAAD,CAA5C;AAAA;AAAA,MAAOC,UAAP;AAAA,MAAmBC,aAAnB;;AAOAf,EAAAA,SAAS,CAAC,YAAK;AACXgB,IAAAA,kBAAkB;AACrB,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAE7BX,IAAAA,QAAQ,CAACY,iCAAT,GACCC,IADD,CAEI,UAACC,MAAD,EAAY;AACR,UAAGA,MAAM,CAACC,MAAP,KAAkB,SAArB,EAA+B;AAC3B,eAAOf,QAAQ,CAACgB,uBAAT,CAAiC,EAAjC,CAAP;AACH,OAFD,MAGI;AACAC,QAAAA,KAAK,CAAC,2FAAD,CAAL;AACH;AACJ,KATL,EAWCJ,IAXD,CAYI,UAACK,QAAD,EAAc;AAEVC,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AAEA,UAAMG,WAAW,GAAG;AAChBC,QAAAA,GAAG,EAAEJ,QAAQ,CAACK,MAAT,CAAgBlB,QADL;AAEhBmB,QAAAA,GAAG,EAAEN,QAAQ,CAACK,MAAT,CAAgBjB;AAFL,OAApB;AAIAa,MAAAA,OAAO,CAACC,GAAR,CAAYC,WAAZ;AAEAnB,MAAAA,MAAM,CAACuB,OAAP,CAAeC,aAAf,CACI;AAACC,QAAAA,MAAM,EAAEN;AAAT,OADJ,EAC2B,IAD3B;AAIAjB,MAAAA,qBAAqB,CAACiB,WAAD,CAArB;AACAX,MAAAA,aAAa,CAACW,WAAD,CAAb;AAEH,KA9BL,EAgCCO,KAhCD,CAiCI,UAACC,KAAD,EAAW;AAEPV,MAAAA,OAAO,CAACC,GAAR,CAAY,0EAAwES,KAApF;AACH,KApCL;AAuCH,GAzCD;;AA2CA,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAS;AACtBZ,IAAAA,OAAO,CAACC,GAAR,CAAYW,IAAZ;AACArB,IAAAA,aAAa,CAACqB,IAAD,CAAb;AACH,GAHD;;AAKA,SACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEI,oBAAC,OAAD;AACA,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAACC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KAAhC;AAAuCG,MAAAA,MAAM,EAACF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC;AAAvE,KADP;AAEA,IAAA,GAAG,EAAEjC,MAFL;AAGA,IAAA,aAAa,EAAEO,UAHf;AAIA,IAAA,sBAAsB,EAAEqB,QAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAUH,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVG,CADJ;AAcH;;AAED,eAAe7B,SAAf","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { SafeAreaView, Text, Button } from 'react-native';\nimport MapView, {Marker} from 'react-native-maps';\nimport * as Location from 'expo-location';\nimport { Dimensions } from 'react-native';\n\nfunction MapScreen(){\n\n    const mapRef = useRef(null);\n    const [currentCoordinates, setCurrentCoordinates] = useState({});\n    const [currRegion, setCurrRegion] = useState({\n        latitude: 45.5163539,\n        longitude: -73.5775142,\n        latitudeDelta: 0.05,\n        longitudeDelta:0.05\n      })\n\n    useEffect(() =>{\n        getCurrentLocation();\n    }, [])\n\n    const getCurrentLocation = () => {\n\n        Location.requestForegroundPermissionsAsync()\n        .then(\n            (result) => {\n                if(result.status === \"granted\"){\n                    return Location.getCurrentPositionAsync({});\n                }\n                else{\n                    alert(\"You have not granted location permission. Please grant location permission from Settings.\")\n                }\n            }\n        )\n        .then(\n            (location) => {\n                \n                console.log(\"Location received: \");\n                console.log(location);\n\n                const coordinates = {\n                    lat: location.coords.latitude,\n                    lng: location.coords.longitude\n                }\n                console.log(coordinates);\n\n                mapRef.current.animateCamera(\n                    {center: coordinates}, 2000\n                  );\n\n                setCurrentCoordinates(coordinates);\n                setCurrRegion(coordinates);\n\n            }\n        )\n        .catch(\n            (error) => {\n\n                console.log(\"Error while granting permission or while accessing current location: \"+error);\n            }\n        )\n\n    }\n\n    const mapMoved = (data) =>{\n        console.log(data);\n        setCurrRegion(data);\n    }\n\n    return(\n        <SafeAreaView>\n            \n            <MapView\n            style={{width:Dimensions.get(\"window\").width, height:Dimensions.get(\"window\").height}}\n            ref={mapRef}\n            initialRegion={currRegion}\n            onRegionChangeComplete={mapMoved}\n     >\n\n     </MapView>\n     <Button title=\"Current\"></Button>\n        </SafeAreaView>\n    );\n}\n\nexport default MapScreen;"]},"metadata":{},"sourceType":"module"}