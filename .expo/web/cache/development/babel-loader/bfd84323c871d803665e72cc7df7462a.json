{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/graphic/Desktop/Web Dev adv Project/treasure-hunt/ListScreen.js\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport { db } from \"./FirebaseManager\";\nimport { getDistance } from 'geolib';\nimport * as location from 'expo-location';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nfunction ListScreen(_ref) {\n  var _this = this;\n\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      cachesArray = _useState2[0],\n      setCachesArray = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      msg = _useState6[0],\n      setMsg = _useState6[1];\n\n  var LocationCoords = [];\n  var nearestLocations = [];\n  var user = AsyncStorage.getItem(\"username\");\n  useEffect(function () {\n    console.log(String(user[\"_W\"]));\n    setCachesArray([]);\n    getCurrentLocation();\n  }, []);\n\n  var getCurrentLocation = function getCurrentLocation() {\n    console.log(user);\n    location.requestForegroundPermissionsAsync().then(function (result) {\n      console.log(\"got reslut from \");\n      console.log(result);\n\n      if (result.status === \"granted\") {\n        console.log(\"user gave permission\");\n        return location.getCurrentPositionAsync({});\n      } else {\n        console.log(\"permission denied\");\n        throw new Error(\"user didnt grant permission\");\n      }\n    }).then(function (loc) {\n      console.log(\"got the location\");\n      console.log(loc);\n      var coordinates = {\n        lat: loc.coords.latitude,\n        lng: loc.coords.longitude\n      };\n      showCaches(coordinates);\n    }).catch(function (err) {\n      console.log(err);\n      console.log(\"Couldnt fetch location\");\n    });\n  };\n\n  var showCaches = function showCaches(coordinates) {\n    console.log(\"user\");\n    console.log(user);\n    db.collection(\"caches\").where(\"postedBy\", \"!=\", user).get().then(function (querySnapshot) {\n      if (querySnapshot.size === 0) {\n        setMsg(\"You do not have any caches to find yet\");\n      } else {\n        setMsg(\"\");\n        LocationCoords = [];\n        nearestLocations = [];\n        querySnapshot.forEach(function (doc) {\n          LocationCoords.push({\n            latitude: parseFloat(doc.data().latitude),\n            longitude: parseFloat(doc.data().longitude),\n            title: doc.data().cacheName,\n            id: doc.id\n          });\n        });\n\n        for (var i = 0; i < LocationCoords.length; i++) {\n          var dist = getDistance({\n            latitude: coordinates.lat,\n            longitude: coordinates.lng\n          }, {\n            latitude: LocationCoords[i].latitude,\n            longitude: LocationCoords[i].longitude\n          }) * 0.000621371;\n\n          if (!isNaN(dist)) {\n            var locationInfo = {\n              location: {\n                latitude: LocationCoords[i].latitude,\n                longitude: LocationCoords[i].longitude\n              },\n              distance: dist.toFixed(3),\n              title: LocationCoords[i].title,\n              id: LocationCoords[i].id\n            };\n            nearestLocations.push(locationInfo);\n          }\n\n          nearestLocations.sort(function (a, b) {\n            return a.distance - b.distance;\n          });\n        }\n\n        setCachesArray(nearestLocations);\n        setLoading(false);\n      }\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: ({\n      backgroundColor: '#dfdfdf'\n    }, {\n      margin: 10\n    }),\n    title: \"welcome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.page_title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, \"Caches Available\"), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }\n  }, isLoading ? React.createElement(ActivityIndicator, {\n    animating: true,\n    size: \"large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 33\n    }\n  }) : React.createElement(FlatList, {\n    data: cachesArray,\n    keyExtractor: function keyExtractor(item, index) {\n      return item.id;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item,\n          index = _ref2.index;\n      return React.createElement(View, {\n        style: styles.list_item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.cache_title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 21\n        }\n      }, item.title), React.createElement(Text, {\n        style: styles.latnlong,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }\n      }, item.location.latitude.toFixed(3)), React.createElement(Text, {\n        style: styles.latnlong,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }\n      }, item.location.longitude.toFixed(3)), React.createElement(Text, {\n        style: styles.latnlong,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }\n      }, item.distance, \" Kms\"), React.createElement(View, {\n        style: styles.seperator,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  })), React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, msg));\n}\n\nvar styles = StyleSheet.create({\n  list_item: {\n    backgroundColor: '#009A00',\n    borderRadius: 10\n  },\n  seperator: {\n    height: 5,\n    backgroundColor: 'white'\n  },\n  cache_title: {\n    color: 'white',\n    fontSize: 25,\n    fontWeight: 'bold',\n    paddingBottom: 10\n  },\n  page_title: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 30,\n    color: '#009200',\n    margin: 10\n  },\n  latnlong: {\n    fontSize: 15,\n    color: 'yellow'\n  }\n});\nexport default ListScreen;","map":{"version":3,"sources":["/Users/graphic/Desktop/Web Dev adv Project/treasure-hunt/ListScreen.js"],"names":["React","useEffect","useState","db","getDistance","location","AsyncStorage","ListScreen","navigation","route","cachesArray","setCachesArray","isLoading","setLoading","msg","setMsg","LocationCoords","nearestLocations","user","getItem","console","log","String","getCurrentLocation","requestForegroundPermissionsAsync","then","result","status","getCurrentPositionAsync","Error","loc","coordinates","lat","coords","latitude","lng","longitude","showCaches","catch","err","collection","where","get","querySnapshot","size","forEach","doc","push","parseFloat","data","title","cacheName","id","i","length","dist","isNaN","locationInfo","distance","toFixed","sort","a","b","backgroundColor","margin","styles","page_title","item","index","list_item","cache_title","latnlong","seperator","StyleSheet","create","borderRadius","height","color","fontSize","fontWeight","paddingBottom","textAlign"],"mappings":"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","sourcesContent":["import React ,{useEffect,useState} from 'react';\nimport { View, Text ,ActivityIndicator,FlatList, SafeAreaView} from 'react-native';\nimport { db } from './FirebaseManager';\nimport {getDistance} from 'geolib';\nimport * as location from 'expo-location';\n//import Styles from './Styles';\nimport { StyleSheet } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nfunction ListScreen({navigation, route}){\n    const [cachesArray,setCachesArray]=useState([]);\n    const [isLoading,setLoading]=useState(true);\n    const [msg,setMsg]=useState(\"\");\n\n    let LocationCoords = [];\n    let nearestLocations=[];\n    // const user=route.params.user;\n    const user=AsyncStorage.getItem(\"username\");\n\n    useEffect(() => {\n      console.log(String(user[\"_W\"])); \n        setCachesArray([]);\n        //43.789634649203784, -79.24426781584285 - 8 mass\n        //43.656290660189946, -79.38017140235499 - young/dund\n       getCurrentLocation();\n        \n    },[]);\n\n    const getCurrentLocation= () =>{\n      console.log(user);\n\n        location.requestForegroundPermissionsAsync()\n          .then(\n            (result) => {\n              console.log(\"got reslut from \");\n              console.log(result);\n      \n              if(result.status === \"granted\"){\n                console.log(\"user gave permission\");\n      \n                return location.getCurrentPositionAsync({});\n              }else{\n                console.log(\"permission denied\");\n                throw new Error(\"user didnt grant permission\");\n              }\n            }\n          )\n          .then(\n            (loc) => {\n      console.log(\"got the location\");\n      console.log(loc);\n     \n      \n      const coordinates={\n        lat:loc.coords.latitude,\n        lng:loc.coords.longitude\n      }\n      showCaches(coordinates);\n     \n            }\n          )\n          .catch(\n            (err) =>{\n              console.log(err);\n              console.log(\"Couldnt fetch location\");\n            }\n          );\n        \n       \n      }\n\n    const showCaches = (coordinates) => {\n        console.log(\"user\");\n        console.log(user);\n        db.collection(\"caches\").where(\"postedBy\",\"!=\",user).get().then((querySnapshot) => {\n            if(querySnapshot.size === 0){\n                setMsg(\"You do not have any caches to find yet\");\n            }else{\n                \n                setMsg(\"\");\n                 LocationCoords=[];\n                 nearestLocations=[];\n\n                querySnapshot.forEach((doc) => {\n                    \n                  LocationCoords.push({latitude:parseFloat(doc.data().latitude), longitude:parseFloat(doc.data().longitude),title:doc.data().cacheName,id:doc.id});\n                });\n                \n                for(let i=0;i<LocationCoords.length;i++){\n                   // const dist=getDistance({latitude:43.656290660189946,longitude:-79.38017140235499},{latitude:LocationCoords[i].latitude,longitude:LocationCoords[i].longitude}) * 0.000621371;\n                 const dist=getDistance({latitude:coordinates.lat,longitude:coordinates.lng},{latitude:LocationCoords[i].latitude,longitude:LocationCoords[i].longitude}) * 0.000621371;\n                    if(!isNaN(dist)){\n                            const locationInfo = {\n                                location:{\n                                    latitude:LocationCoords[i].latitude,\n                                    longitude:LocationCoords[i].longitude\n                                },\n                               distance:dist.toFixed(3),\n                               title:LocationCoords[i].title,\n                               id:LocationCoords[i].id\n                            }\n                            nearestLocations.push(locationInfo);\n                        \n                    }   \n                    nearestLocations.sort(function (a, b) {\n                        return a.distance - b.distance;\n                      }); \n                }\n                setCachesArray(nearestLocations);\n                 setLoading(false);\n                \n               }\n            }\n          );      \n    }\n    \n    return(\n        <SafeAreaView style={{backgroundColor:'#dfdfdf'},{margin:10}} title=\"welcome\"> \n            <Text style={styles.page_title}>Caches Available</Text>\n         \n            <View>\n                  {isLoading ? (<ActivityIndicator animating={true} size=\"large\"/>) : (\n                <FlatList\n                data={cachesArray}\n                keyExtractor = {(item,index) => {return item.id}}\n                renderItem={({item,index}) => (\n                <View style={styles.list_item}>\n                   \n                    <Text style={styles.cache_title}>{item.title}</Text>\n                    <Text style={styles.latnlong}>{item.location.latitude.toFixed(3)}</Text>\n                    <Text style={styles.latnlong}>{item.location.longitude.toFixed(3)}</Text>  \n                    <Text style={styles.latnlong}>{item.distance} Kms</Text>\n                    <View style={styles.seperator}/> \n                </View>\n                \n                \n                )}\n\n                />\n            )}\n            </View>\n                \n            <Text>{msg}</Text>\n        </SafeAreaView>\n    );\n}\n\nconst styles=StyleSheet.create({\n    list_item:{\n        backgroundColor:'#009A00',\n        borderRadius:10\n    },\n    seperator:{\n      height:5,\n      backgroundColor:'white'\n  },\n  cache_title:{\n    color:'white',\n    fontSize:25,\n    fontWeight:'bold',\n    paddingBottom:10\n  },\n  page_title:{\n    textAlign:'center',\n    fontWeight:'bold',\n    fontSize:30,\n    color:'#009200',\n    margin:10\n  },\n  latnlong:{\n    fontSize:15,\n    color:'yellow'\n  }\n});\nexport default ListScreen;"]},"metadata":{},"sourceType":"module"}