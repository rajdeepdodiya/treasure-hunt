{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/graphic/Desktop/Web Dev adv Project/treasure-hunt/FavouritesScreen.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { AsyncStorage } from \"react-native-web/dist/index\";\nimport { db } from \"./FirebaseManager\";\n\nvar FavouritesScreen = function FavouritesScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var user = route.params.user;\n  var userObj = {};\n  var userFavArray = [];\n  var matchedFavsArray = [];\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      favouritesArrayToDisplay = _useState2[0],\n      setfavouritesArrayToDisplay = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setLoading = _useState4[1];\n\n  var showFavourites = function showFavourites() {\n    db.collection(\"users\").where(\"username\", \"==\", user).get().then(function (querySnapShot) {\n      if (querySnapShot.size === 0) {\n        console.log(\"cloulndt find matching  user\");\n      } else {\n        querySnapShot.forEach(function (doc) {\n          userObj = doc;\n        });\n\n        if (\"favourites\" in userObj.data()) {\n          userFavArray = userObj.data().favourites;\n          db.collection(\"caches\").get().then(function (querySnapShot) {\n            if (querySnapShot.size === 0) {\n              console.log(\"no caches available\");\n            } else {\n              querySnapShot.forEach(function (doc) {\n                if (userFavArray.includes(doc.id)) {\n                  matchedFavsArray.push(doc);\n                }\n              });\n              setfavouritesArrayToDisplay(matchedFavsArray);\n              setLoading(false);\n            }\n          }).catch();\n        } else {\n          console.log(\"u have not added anything to favourites\");\n        }\n      }\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  var goToDetailsScreen = function goToDetailsScreen(item) {\n    AsyncStorage.getItem(\"username\").then(function (data) {\n      console.log(data);\n      user = data;\n      navigation.navigate(\"CacheDetails\", {\n        locationInfo: item,\n        user: user\n      });\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n\n  useEffect(function () {\n    showFavourites();\n  }, []);\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.page_title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, \"Favourites\"), isLoading ? React.createElement(ActivityIndicator, {\n    animating: true,\n    size: \"large\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 27\n    }\n  }) : React.createElement(FlatList, {\n    data: favouritesArrayToDisplay,\n    keyExtractor: function keyExtractor(item, index) {\n      return item.id;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item,\n          index = _ref2.index;\n      return React.createElement(Pressable, {\n        onPress: function onPress() {\n          return goToDetailsScreen({\n            id: item.id,\n            location: {\n              latitude: item.data().latitude,\n              longitude: item.data().longitude\n            },\n            title: item.data().cacheName\n          });\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 49\n        }\n      }, React.createElement(View, {\n        style: styles.list_item,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.flex,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 20\n        }\n      }, React.createElement(Text, {\n        style: styles.cache_title,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 20\n        }\n      }, item.data().cacheName)), React.createElement(Text, {\n        style: styles.latnlong,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }\n      }, parseFloat(item.data().latitude).toFixed(3)), React.createElement(Text, {\n        style: styles.latnlong,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }\n      }, parseFloat(item.data().longitude).toFixed(3)), React.createElement(View, {\n        style: styles.seperator,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }\n      })));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  list_item: {\n    backgroundColor: '#009A00',\n    borderRadius: 15,\n    marginBottom: 10,\n    marginStart: 15,\n    marginEnd: 15\n  },\n  seperator: {\n    height: 5,\n    backgroundColor: 'white'\n  },\n  cache_title: {\n    color: 'white',\n    fontSize: 25,\n    fontWeight: 'bold',\n    paddingBottom: 10,\n    paddingStart: 15\n  },\n  flex: {\n    flexDirection: 'row'\n  },\n  page_title: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 30,\n    color: '#009200',\n    margin: 10\n  },\n  latnlong: {\n    fontSize: 15,\n    color: 'yellow',\n    paddingStart: 10\n  }\n});\nexport default FavouritesScreen;","map":{"version":3,"sources":["/Users/graphic/Desktop/Web Dev adv Project/treasure-hunt/FavouritesScreen.js"],"names":["React","useEffect","useState","AsyncStorage","db","FavouritesScreen","navigation","route","user","params","userObj","userFavArray","matchedFavsArray","favouritesArrayToDisplay","setfavouritesArrayToDisplay","isLoading","setLoading","showFavourites","collection","where","get","then","querySnapShot","size","console","log","forEach","doc","data","favourites","includes","id","push","catch","err","goToDetailsScreen","item","getItem","navigate","locationInfo","styles","page_title","index","location","latitude","longitude","title","cacheName","list_item","flex","cache_title","latnlong","parseFloat","toFixed","seperator","StyleSheet","create","backgroundColor","borderRadius","marginBottom","marginStart","marginEnd","height","color","fontSize","fontWeight","paddingBottom","paddingStart","flexDirection","textAlign","margin"],"mappings":"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","sourcesContent":["import React ,{useEffect,useState} from 'react';\nimport { View, Text ,ActivityIndicator,FlatList, SafeAreaView, Pressable,Alert,StyleSheet,AsyncStorage} from 'react-native';\nimport { db } from './FirebaseManager';\n\n\nconst FavouritesScreen = ({navigation,route}) => {\n   let user=route.params.user;\n   let userObj={};\n   let userFavArray=[];\n   let matchedFavsArray=[];\n   const [favouritesArrayToDisplay,setfavouritesArrayToDisplay] = useState([]);\n   const [isLoading,setLoading]=useState(true);\n\nconst showFavourites = () =>{\n   \n    db.collection(\"users\").where(\"username\",\"==\",user).get()\n    .then((querySnapShot) => {\n        if(querySnapShot.size === 0 ){\n            console.log(\"cloulndt find matching  user\");\n        }else{\n            querySnapShot.forEach((doc) => {\n                userObj=doc;\n            });\n            \n            if(\"favourites\" in userObj.data()){\n                userFavArray=userObj.data().favourites;\n                db.collection(\"caches\").get()\n                .then((querySnapShot) =>{\n                    if(querySnapShot.size === 0){\n                        console.log(\"no caches available\");\n                    }else{\n                        querySnapShot.forEach((doc) => {\n                       //  matchedFavsArray.push(doc)  \n                         if(userFavArray.includes(doc.id)){\n                                matchedFavsArray.push(doc);\n                         }\n                        });\n                        setfavouritesArrayToDisplay(matchedFavsArray);\n                        setLoading(false);\n                        \n                    }\n                }\n                )\n                .catch();\n\n                 \n              }else{\n                console.log(\"u have not added anything to favourites\");\n              }\n        }\n\n\n        \n    })\n    .catch((err) => {\n        console.log(err);\n    });\n}\n\nconst goToDetailsScreen = (item) => {\n    AsyncStorage.getItem(\"username\")\n    .then((data) => {console.log(data);\n      user=data; \n      navigation.navigate(\"CacheDetails\",{locationInfo:item,user:user});\n    })\n    .catch((err)=>{console.log(err)});\n    \n   \n  }\n    useEffect(() => { \n       \n          showFavourites();\n        },[]);\n    return(\n        <View>\n            <Text style={styles.page_title}>Favourites</Text>\n            {isLoading ? (<ActivityIndicator animating={true} size=\"large\"/>) : (\n                <FlatList\n                data={favouritesArrayToDisplay}\n                keyExtractor = {(item,index) => {return item.id}}\n                renderItem={({item,index}) => ( <Pressable  onPress={() => goToDetailsScreen({id:item.id,location:{latitude:item.data().latitude,longitude:item.data().longitude},title:item.data().cacheName})}  >\n                <View style={styles.list_item}>\n                   <View style={styles.flex}>\n                   <Text  style={styles.cache_title}>{item.data().cacheName}</Text>\n                   </View>\n                    \n                    <Text style={styles.latnlong}>{parseFloat( item.data().latitude).toFixed(3)}</Text>\n                    <Text style={styles.latnlong}>{parseFloat( item.data().longitude).toFixed(3)}</Text>  \n                    \n                    <View style={styles.seperator}/> \n                </View>\n               \n                </Pressable>\n                )}\n\n                />\n            )}\n\n        </View>\n    );\n}\n\n\n\nconst styles=StyleSheet.create({\n    list_item:{\n        backgroundColor:'#009A00',\n        borderRadius:15,\n        marginBottom:10,\n        marginStart:15,\n        marginEnd:15\n    },\n    seperator:{\n      height:5,\n      backgroundColor:'white'\n  },\n  cache_title:{\n    color:'white',\n    fontSize:25,\n    fontWeight:'bold',\n    paddingBottom:10,\n    paddingStart:15\n   \n  },\n  flex:{\n    flexDirection:'row'\n  },\n  page_title:{\n    textAlign:'center',\n    fontWeight:'bold',\n    fontSize:30,\n    color:'#009200',\n    margin:10\n  },\n  latnlong:{\n    fontSize:15,\n    color:'yellow',\n    paddingStart:10\n  }\n});\n\nexport default FavouritesScreen;"]},"metadata":{},"sourceType":"module"}