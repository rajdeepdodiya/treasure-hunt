{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/anonymousfiles/Desktop/Advanced Web Development/Project/Treasure-Hunt/CacheDetailsScreen.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { db } from \"./FirebaseManager\";\nimport * as location from 'expo-location';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport MapView, { Marker } from 'react-native-maps';\nimport Ionicons from \"@expo/vector-icons/Ionicons\";\n\nvar CacheDetailsScreen = function CacheDetailsScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var locationInfo = route.params.locationInfo;\n\n  var addToFavourites = function addToFavourites() {\n    {\n      navigation.navigate(\"Favourites\", {\n        location: {\n          locationInfo: locationInfo\n        }\n      });\n    }\n  };\n\n  React.useLayoutEffect(function () {\n    navigation.setOptions({\n      headerRight: function headerRight() {\n        return React.createElement(Ionicons, {\n          style: {\n            marginRight: 30\n          },\n          name: \"heart\",\n          size: 30,\n          color: \"#FF0000\",\n          onPress: addToFavourites,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 11\n          }\n        });\n      }\n    });\n  }, [navigation, {}]);\n\n  var _React$useState = React.useState({\n    latitude: locationInfo.location.latitude,\n    longitude: locationInfo.location.longitude,\n    latitudeDelta: 0.005,\n    longitudeDelta: 0.005\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      currRegion = _React$useState2[0],\n      setCurrRegion = _React$useState2[1];\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      location = _useState2[0],\n      setLocation = _useState2[1];\n\n  var mapMoved = function mapMoved(data) {};\n\n  return React.createElement(View, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, React.createElement(MapView, {\n    style: {\n      width: Dimensions.get(\"window\").width,\n      height: Dimensions.get(\"window\").height / 3\n    },\n    initialRegion: currRegion,\n    onRegionChangeComplete: mapMoved,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 14\n    }\n  }, React.createElement(Marker, {\n    coordinate: {\n      latitude: currRegion.latitude,\n      longitude: currRegion.longitude\n    },\n    title: locationInfo.title,\n    description: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default CacheDetailsScreen;","map":{"version":3,"sources":["/Users/anonymousfiles/Desktop/Advanced Web Development/Project/Treasure-Hunt/CacheDetailsScreen.js"],"names":["React","useEffect","useState","db","location","AsyncStorage","MapView","Marker","Ionicons","CacheDetailsScreen","navigation","route","locationInfo","params","addToFavourites","navigate","useLayoutEffect","setOptions","headerRight","marginRight","latitude","longitude","latitudeDelta","longitudeDelta","currRegion","setCurrRegion","setLocation","mapMoved","data","width","Dimensions","get","height","title"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAAyBC,QAAzB,QAAwC,OAAxC;;;;AAEA,SAASC,EAAT;AACA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;;AAEA,OAAOC,YAAP,MAAyB,2CAAzB;AACA,OAAQC,OAAR,IAAkBC,MAAlB,QAA+B,mBAA/B;AACA,OAAOC,QAAP;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,OAAwB;AAAA,MAAtBC,UAAsB,QAAtBA,UAAsB;AAAA,MAAXC,KAAW,QAAXA,KAAW;AAE/C,MAAMC,YAAY,GAAGD,KAAK,CAACE,MAAN,CAAaD,YAAlC;;AAEA,MAAME,eAAe,GAAG,SAAlBA,eAAkB,GAAK;AAE3B;AAACJ,MAAAA,UAAU,CAACK,QAAX,CAAoB,YAApB,EAAiC;AAACX,QAAAA,QAAQ,EAAC;AAACQ,UAAAA,YAAY,EAAZA;AAAD;AAAV,OAAjC;AAA4D;AAC9D,GAHD;;AAKAZ,EAAAA,KAAK,CAACgB,eAAN,CAAsB,YAAM;AAC1BN,IAAAA,UAAU,CAACO,UAAX,CAAsB;AACpBC,MAAAA,WAAW,EAAG;AAAA,eACZ,oBAAC,QAAD;AACA,UAAA,KAAK,EAAE;AAACC,YAAAA,WAAW,EAAC;AAAb,WADP;AAEE,UAAA,IAAI,EAAC,OAFP;AAGE,UAAA,IAAI,EAAE,EAHR;AAIE,UAAA,KAAK,EAAC,SAJR;AAKE,UAAA,OAAO,EAAEL,eALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADY;AAAA;AADM,KAAtB;AAWD,GAZD,EAYG,CAACJ,UAAD,EAAY,EAAZ,CAZH;;AAeA,wBAAiCV,KAAK,CAACE,QAAN,CAAe;AAE9CkB,IAAAA,QAAQ,EAACR,YAAY,CAACR,QAAb,CAAsBgB,QAFe;AAG9CC,IAAAA,SAAS,EAACT,YAAY,CAACR,QAAb,CAAsBiB,SAHc;AAI9CC,IAAAA,aAAa,EAAC,KAJgC;AAK9CC,IAAAA,cAAc,EAAC;AAL+B,GAAf,CAAjC;AAAA;AAAA,MAAOC,UAAP;AAAA,MAAkBC,aAAlB;;AAOA,kBAA6BvB,QAAQ,EAArC;AAAA;AAAA,MAAOE,QAAP;AAAA,MAAgBsB,WAAhB;;AACI,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAU,CAE1B,CAFD;;AAIJ,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,oBAAC,OAAD;AACG,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAACC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KAAhC;AAAuCG,MAAAA,MAAM,EAACF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAAzB,GAAgC;AAA9E,KADV;AAEG,IAAA,aAAa,EAAER,UAFlB;AAGG,IAAA,sBAAsB,EAAEG,QAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKG,oBAAC,MAAD;AAAQ,IAAA,UAAU,EAAE;AAACP,MAAAA,QAAQ,EAACI,UAAU,CAACJ,QAArB;AACpBC,MAAAA,SAAS,EAACG,UAAU,CAACH;AADD,KAApB;AACiC,IAAA,KAAK,EAAET,YAAY,CAACqB,KADrD;AAC4D,IAAA,WAAW,EAAC,EADxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALH,CADL,CADJ;AAcH,CAlDD;;AAoDA,eAAexB,kBAAf","sourcesContent":["import React ,{useEffect,useState} from 'react';\nimport { View, Text, Dimensions} from 'react-native';\nimport { db } from './FirebaseManager';\nimport * as location from 'expo-location';\nimport { StyleSheet } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport  MapView, {Marker} from 'react-native-maps';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\n\nconst CacheDetailsScreen = ({navigation,route}) => {\n   \n    const locationInfo = route.params.locationInfo;\n\n    const addToFavourites = () =>{\n\n      {navigation.navigate(\"Favourites\",{location:{locationInfo}})}\n    }\n\n    React.useLayoutEffect(() => {\n      navigation.setOptions({\n        headerRight : () => ( \n          <Ionicons\n          style={{marginRight:30}}\n            name=\"heart\"\n            size={30}\n            color=\"#FF0000\"\n            onPress={addToFavourites}\n          />\n    )\n      })\n    }, [navigation,{}]);\n\n\n    const [currRegion,setCurrRegion]=React.useState({\n      //latitude:43.656290660189946,\n      latitude:locationInfo.location.latitude,\n      longitude:locationInfo.location.longitude,\n      latitudeDelta:0.005,\n      longitudeDelta:0.005 \n    });\n    const [location,setLocation]=useState();\n        const mapMoved = (data) => {\n         // setCurrRegion(data)\n        }\n\n    return (\n        <View>\n             <MapView \n                style={{width:Dimensions.get(\"window\").width, height:Dimensions.get(\"window\").height/3}}\n                initialRegion={currRegion}\n                onRegionChangeComplete={mapMoved} >\n      \n                <Marker coordinate={{latitude:currRegion.latitude,\n                longitude:currRegion.longitude}} title={locationInfo.title} description=\"\"></Marker>\n\n            </MapView>\n            \n        </View>\n    );\n}\n\nexport default CacheDetailsScreen;"]},"metadata":{},"sourceType":"module"}