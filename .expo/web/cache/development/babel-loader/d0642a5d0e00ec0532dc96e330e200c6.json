{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/anonymousfiles/Desktop/Advanced Web Development/Project/Treasure-Hunt/MapScreen.js\";\nimport React, { useEffect } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport MapView, { Marker } from 'react-native-maps';\nimport * as Location from 'expo-location';\n\nfunction MapScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentCoordinates = _useState2[0],\n      setCurrentCoordinates = _useState2[1];\n\n  useEffect(function () {\n    getCurrentLocation();\n  });\n\n  var getCurrentLocation = function getCurrentLocation() {\n    Location.requestForegroundPermissionsAsync().then(function (result) {\n      if (result.status === \"granted\") {\n        return Location.getCurrentPositionAsync({});\n      } else {\n        alert(\"You have not granted location permission. Please grant location permission from Settings.\");\n      }\n    }).catch(function (error) {\n      console.log(\"Error while granting permission or while accessing current location: \" + error);\n    }).then(function (location) {\n      alert(location.coords.latitude);\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Map Screen\"));\n}\n\nexport default MapScreen;","map":{"version":3,"sources":["/Users/anonymousfiles/Desktop/Advanced Web Development/Project/Treasure-Hunt/MapScreen.js"],"names":["React","useEffect","MapView","Marker","Location","MapScreen","useState","currentCoordinates","setCurrentCoordinates","getCurrentLocation","requestForegroundPermissionsAsync","then","result","status","getCurrentPositionAsync","alert","catch","error","console","log","location","coords","latitude"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,OAAOC,OAAP,IAAiBC,MAAjB,QAA8B,mBAA9B;AACA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;;AAEA,SAASC,SAAT,GAAoB;AAEhB,kBAAoDC,QAAQ,CAAC,EAAD,CAA5D;AAAA;AAAA,MAAOC,kBAAP;AAAA,MAA2BC,qBAA3B;;AAEAP,EAAAA,SAAS,CAAC,YAAK;AACXQ,IAAAA,kBAAkB;AACrB,GAFQ,CAAT;;AAIA,MAAMA,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAE7BL,IAAAA,QAAQ,CAACM,iCAAT,GACCC,IADD,CAEI,UAACC,MAAD,EAAY;AACR,UAAGA,MAAM,CAACC,MAAP,KAAkB,SAArB,EAA+B;AAC3B,eAAOT,QAAQ,CAACU,uBAAT,CAAiC,EAAjC,CAAP;AACH,OAFD,MAGI;AACAC,QAAAA,KAAK,CAAC,2FAAD,CAAL;AACH;AACJ,KATL,EAWCC,KAXD,CAYI,UAACC,KAAD,EAAW;AAEPC,MAAAA,OAAO,CAACC,GAAR,CAAY,0EAAwEF,KAApF;AACH,KAfL,EAiBCN,IAjBD,CAkBI,UAACS,QAAD,EAAc;AACVL,MAAAA,KAAK,CAACK,QAAQ,CAACC,MAAT,CAAgBC,QAAjB,CAAL;AACH,KApBL;AAuBH,GAzBD;;AA2BA,SACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CADJ;AAKH;;AAED,eAAejB,SAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { SafeAreaView, Text } from 'react-native';\nimport MapView, {Marker} from 'react-native-maps';\nimport * as Location from 'expo-location';\n\nfunction MapScreen(){\n\n    const [currentCoordinates, setCurrentCoordinates] = useState(\"\")\n\n    useEffect(() =>{\n        getCurrentLocation();\n    })\n\n    const getCurrentLocation = () => {\n\n        Location.requestForegroundPermissionsAsync()\n        .then(\n            (result) => {\n                if(result.status === \"granted\"){\n                    return Location.getCurrentPositionAsync({});\n                }\n                else{\n                    alert(\"You have not granted location permission. Please grant location permission from Settings.\")\n                }\n            }\n        )\n        .catch(\n            (error) => {\n\n                console.log(\"Error while granting permission or while accessing current location: \"+error);\n            }\n        )\n        .then(\n            (location) => {\n                alert(location.coords.latitude);\n            }\n        )\n\n    }\n\n    return(\n        <SafeAreaView>\n            <Text>Map Screen</Text>\n        </SafeAreaView>\n    );\n}\n\nexport default MapScreen;"]},"metadata":{},"sourceType":"module"}